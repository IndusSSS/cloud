version: '3.8'

services:
  # Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: smartsecurity
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin123}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [backend]
    restart: unless-stopped

  # API Backend
  api:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://admin:${DB_PASSWORD:-admin123}@db:5432/smartsecurity
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      NODE_ENV: production
    depends_on:
      - db
    networks: [backend]
    restart: unless-stopped

  # Customer Portal Frontend
  frontend_cloud:
    build: ./frontend_customer
    environment:
      VITE_API_URL: https://cloud.smartsecurity.solutions/api
      NODE_ENV: production
    networks: [backend]
    restart: unless-stopped

  # Admin Console Frontend
  frontend_admin:
    build: ./frontend_admin
    environment:
      VITE_API_URL: https://admin.smartsecurity.solutions/api
      NODE_ENV: production
    networks: [backend]
    restart: unless-stopped

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"   # HTTP redirect only
      - "443:443" # HTTPS only
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/cloud.conf:/etc/nginx/conf.d/default.conf:ro
      # SSL certificates from Let's Encrypt
      - /etc/letsencrypt/live/cloud.smartsecurity.solutions/fullchain.pem:/etc/ssl/certs/cloud.smartsecurity.solutions.crt:ro
      - /etc/letsencrypt/live/cloud.smartsecurity.solutions/privkey.pem:/etc/ssl/private/cloud.smartsecurity.solutions.key:ro
      - /etc/letsencrypt/live/admin.smartsecurity.solutions/fullchain.pem:/etc/ssl/certs/admin.smartsecurity.solutions.crt:ro
      - /etc/letsencrypt/live/admin.smartsecurity.solutions/privkey.pem:/etc/ssl/private/admin.smartsecurity.solutions.key:ro
    depends_on:
      - frontend_cloud
      - frontend_admin
      - api
    restart: unless-stopped
    networks: [backend]

networks:
  backend:
    driver: bridge

volumes:
  db_data: 